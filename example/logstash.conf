input {
    file {
        path => "C:/file1.txt"
        type => "log1"
		tags => ["file1"]
    }

	file {
        path => "C:/file2.txt"
        type => "log2"
		tags => ["file2"]
		codec => plain {
            charset => "UTF-8"
		}
    }
}

filter {
    if [type] == "log1"{
	 if "file1" in [tags] {
        grok {
            match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:[%{POSINT:syslog_pid}])?: %{GREEDYDATA:syslog_message}" }
            add_field => [ "received_at", "%{@timestamp}" ]
            add_field => [ "received_from", "%{host}" ]
        }
        date {
            match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
		kv {}
		mutate {
			copy => { "[SRC]" => "STRSRC" }
			copy => { "[DST]" => "STRDST" }
		}
		geoip {
			source => "SRC"
			target => "GEOIPSRC"
		}
		geoip {
			source => "DST"
			target => "GEOIPDST"
		}
		cidr {
			add_tag => [ "dst_private"]
			address => [ "%{DST}" ]
			network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "127.0.0.0/8" ] 
		}
		cidr {
			add_tag => [ "src_private"]
			address => [ "%{SRC}" ]
			network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "127.0.0.0/8" ] 
		}
		if "dst_private" not in [tags] {
			elasticsearch {
				hosts => "localhost:9200"
				index => "index1"
				query_template => "C:/template-dst.json"
				fields => { "virustotalthreedst" => "virustotalthreedst" }
			}
		}		
		if [virustotalthreedst][date_created] {
		} else if "dst_private" not in [tags] {
			virustotalthree {
				api_key => "key_1"
				field => "[STRDST]"
				lookup_type => "ip"
				target => "virustotalthreedst"
			}
			mutate {
				add_field => { "[virustotalthreedst][date_created]" => "%{@timestamp}" }
			}
		}
	}
  }
  if  "dst_private" not in [tags] and [type] == "log2" {
	if "file2" in [tags] {
		csv {
			separator => "	"
			columns => ["Time", "Event", "Action", "Source", "Target", "Protocol", "Rule/worm name", "Application", "Hash", "User"]
		}
		grok{
			match => {"Source" => "%{IPV4:SRC}:%{NUMBER:SPT}"}
		}
		grok {
			match => {"Target" => "%{IPV4:DST}:%{NUMBER:DPT}"}
		}
		mutate {
			copy => { "[SRC]" => "STRSRC" }
			copy => { "[DST]" => "STRDST" }
		}
		geoip {
			source => "SRC"
			target => "GEOIPSRC"
		}
		geoip {
			source => "DST"
			target => "GEOIPDST"
		}
		cidr {
			add_tag => [ "dst_private"]
			address => [ "%{DST}" ]
			network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "127.0.0.0/8" ] 
		}
		cidr {
			add_tag => [ "src_private"]
			address => [ "%{SRC}" ]
			network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "127.0.0.0/8" ] 
		}
		if "dst_private" not in [tags] {
			elasticsearch {
				hosts => "localhost:9200"
				index => "index2"
				query_template => "C:/template-dst.json"
				fields => { "virustotalthreedst" => "virustotalthreedst" }
			}
		}		
		if [virustotalthreedst][date_created] {
		} else if  "dst_private" not in [tags] {
			virustotalthree {
				api_key => "key2"
				field => "[STRDST]"
				lookup_type => "ip"
				target => "virustotalthreedst"
			}
			mutate {
				add_field => { "[virustotalthreedst][date_created]" => "%{@timestamp}" }
			}
		}
		if "src_private" not in [tags] {
			elasticsearch {
				hosts => "localhost:9200"
				index => "index2"
				query_template => "C:/template-src.json"
				fields => { "virustotalthreesrc" => "virustotalthreesrc" }
			}
		}		
		if [virustotalthreesrc][date_created] {
		} else if "src_private" not in [tags] {
			virustotalthree {
				api_key => "key3"
				field => "[STRSRC]"
				lookup_type => "ip"
				target => "virustotalthreesrc"
			}
			mutate {
				add_field => { "[virustotalthreesrc][date_created]" => "%{@timestamp}" }
			}
		}
	  }
   }
}

output {
	if [type] == "log2" {
    	if "file2" in [tags] {
		elasticsearch {
			hosts => "localhost:9200"
			index => "index2"
		}
		stdout {codec => rubydebug}
		}
	}
    if [type] == "log1"{
	 if "file1" in [tags] {
		elasticsearch {
			hosts => "localhost:9200"
			index => "index1"
		}
		stdout {codec => rubydebug}
	  }
	}
}